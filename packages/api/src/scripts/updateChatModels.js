const mongoose = require('mongoose');
const Chat = require('../models/chat.model');
require('dotenv').config();

async function updateChatModels() {
  try {
    // Connect to MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/neuralchat');
    console.log('‚úÖ Connected to MongoDB');

    // Mapping —Å—Ç–∞—Ä—ã—Ö –º–æ–¥–µ–ª–µ–π –Ω–∞ –Ω–æ–≤—ã–µ
    const modelMapping = {
      'claude-3-5-sonnet-20241022': 'claude-4-sonnet',
      'claude-3-5-sonnet': 'claude-4-sonnet',
      'claude-3.5-sonnet': 'claude-4-sonnet'
    };

    // –ù–∞–π—Ç–∏ –≤—Å–µ —á–∞—Ç—ã —Å —É—Å—Ç–∞—Ä–µ–≤—à–∏–º–∏ –º–æ–¥–µ–ª—è–º–∏
    const oldModels = Object.keys(modelMapping);
    const chatsToUpdate = await Chat.find({
      model: { $in: oldModels }
    });

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —á–∞—Ç–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${chatsToUpdate.length}`);

    if (chatsToUpdate.length === 0) {
      console.log('‚úÖ –í—Å–µ —á–∞—Ç—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏');
      return;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —á–∞—Ç
    let updatedCount = 0;
    for (const chat of chatsToUpdate) {
      const oldModel = chat.model;
      const newModel = modelMapping[oldModel];
      
      if (newModel) {
        console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —á–∞—Ç ${chat._id}: ${oldModel} ‚Üí ${newModel}`);
        
        await Chat.updateOne(
          { _id: chat._id },
          { $set: { model: newModel } }
        );
        
        updatedCount++;
      }
    }

    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —á–∞—Ç–æ–≤: ${updatedCount}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const remainingOldChats = await Chat.find({
      model: { $in: oldModels }
    });

    if (remainingOldChats.length === 0) {
      console.log('üéâ –í—Å–µ —á–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
    } else {
      console.log(`‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å –Ω–µ–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —á–∞—Ç—ã: ${remainingOldChats.length}`);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –º–æ–¥–µ–ª–µ–π —á–∞—Ç–æ–≤:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç MongoDB');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –µ—Å–ª–∏ –æ–Ω –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  updateChatModels();
}

module.exports = updateChatModels; 