# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ api.neuralchat.pro
# –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: AWS CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω

Write-Host "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–¥–æ–º–µ–Ω–∞ api.neuralchat.pro" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan

# –í—ã–±–æ—Ä –º–µ—Ç–æ–¥–∞ DNS
Write-Host "`nüìä –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ DNS:" -ForegroundColor Yellow
Write-Host "1. Route 53 (–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è - $0.50/–º–µ—Å—è—Ü)" -ForegroundColor Green
Write-Host "2. Namecheap DNS (–ë–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ)" -ForegroundColor Yellow

$dnsChoice = Read-Host "`n–í–∞—à –≤—ã–±–æ—Ä (1 –∏–ª–∏ 2)"

if ($dnsChoice -eq "1") {
    Write-Host "`n‚úÖ –í—ã–±—Ä–∞–Ω Route 53" -ForegroundColor Green
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è hosted zone
    Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä—è—é —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ Hosted Zone..." -ForegroundColor Cyan
    $hostedZones = aws route53 list-hosted-zones --query "HostedZones[?Name=='neuralchat.pro.']" | ConvertFrom-Json
    
    if ($hostedZones.Count -eq 0) {
        Write-Host "‚ùå Hosted Zone –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞—é..." -ForegroundColor Yellow
        
        # –°–æ–∑–¥–∞–Ω–∏–µ hosted zone
        $callerRef = "setup-$(Get-Date -Format 'yyyyMMddHHmmss')"
        $createResult = aws route53 create-hosted-zone `
            --name neuralchat.pro `
            --caller-reference $callerRef | ConvertFrom-Json
        
        $zoneId = $createResult.HostedZone.Id -replace '/hostedzone/', ''
        Write-Host "‚úÖ Hosted Zone —Å–æ–∑–¥–∞–Ω–∞: $zoneId" -ForegroundColor Green
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ NS –∑–∞–ø–∏—Å–µ–π
        $nsRecords = $createResult.DelegationSet.NameServers
        Write-Host "`nüìã NS –∑–∞–ø–∏—Å–∏ –¥–ª—è Namecheap:" -ForegroundColor Yellow
        foreach ($ns in $nsRecords) {
            Write-Host "   $ns" -ForegroundColor Cyan
        }
        
        Write-Host "`n‚ö†Ô∏è  –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ NS –∑–∞–ø–∏—Å–∏ –≤ Namecheap:" -ForegroundColor Yellow
        Write-Host "1. –í–æ–π–¥–∏—Ç–µ –≤ Namecheap ‚Üí Domain List ‚Üí Manage" -ForegroundColor White
        Write-Host "2. –í—ã–±–µ—Ä–∏—Ç–µ Custom DNS" -ForegroundColor White
        Write-Host "3. –î–æ–±–∞–≤—å—Ç–µ –≤—Å–µ 4 NS –∑–∞–ø–∏—Å–∏" -ForegroundColor White
        Write-Host "4. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 1-48 —á–∞—Å–æ–≤ –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è DNS" -ForegroundColor White
        
        $continue = Read-Host "`n–ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ –¥–æ–±–∞–≤–∏—Ç–µ NS –∑–∞–ø–∏—Å–∏ –≤ Namecheap"
    } else {
        $zoneId = $hostedZones[0].Id -replace '/hostedzone/', ''
        Write-Host "‚úÖ Hosted Zone –Ω–∞–π–¥–µ–Ω–∞: $zoneId" -ForegroundColor Green
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ ALB
    Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ ALB..." -ForegroundColor Cyan
    $albName = Read-Host "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–∞—à–µ–≥–æ ALB (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ)"
    
    if ([string]::IsNullOrWhiteSpace($albName)) {
        Write-Host "‚ö†Ô∏è  –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è ALB –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å ECS —Å API" -ForegroundColor Yellow
        Write-Host "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ LAUNCH_GUIDE.md" -ForegroundColor Yellow
        exit
    }
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö ALB
    $albInfo = aws elbv2 describe-load-balancers --names $albName | ConvertFrom-Json
    if ($albInfo.LoadBalancers.Count -eq 0) {
        Write-Host "‚ùå ALB –Ω–µ –Ω–∞–π–¥–µ–Ω: $albName" -ForegroundColor Red
        exit
    }
    
    $albDns = $albInfo.LoadBalancers[0].DNSName
    $albZone = $albInfo.LoadBalancers[0].CanonicalHostedZoneId
    Write-Host "‚úÖ ALB –Ω–∞–π–¥–µ–Ω: $albDns" -ForegroundColor Green
    
    # –°–æ–∑–¥–∞–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    Write-Host "`nüîê –°–æ–∑–¥–∞—é SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç..." -ForegroundColor Cyan
    $certArn = aws acm request-certificate `
        --domain-name api.neuralchat.pro `
        --validation-method DNS `
        --region us-east-1 `
        --query CertificateArn `
        --output text
    
    Write-Host "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∑–∞–ø—Ä–æ—à–µ–Ω: $certArn" -ForegroundColor Green
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    Write-Host "‚è≥ –û–∂–∏–¥–∞—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏..." -ForegroundColor Yellow
    Start-Sleep -Seconds 5
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ CNAME –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    $validationData = aws acm describe-certificate `
        --certificate-arn $certArn `
        --region us-east-1 | ConvertFrom-Json
    
    $validationCname = $validationData.Certificate.DomainValidationOptions[0].ResourceRecord
    
    if ($validationCname) {
        Write-Host "`nüìù –î–æ–±–∞–≤–ª—è—é CNAME –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ SSL..." -ForegroundColor Cyan
        
        $changeBatch = @{
            Changes = @(
                @{
                    Action = "CREATE"
                    ResourceRecordSet = @{
                        Name = $validationCname.Name
                        Type = $validationCname.Type
                        TTL = 300
                        ResourceRecords = @(
                            @{ Value = $validationCname.Value }
                        )
                    }
                }
            )
        } | ConvertTo-Json -Depth 10
        
        aws route53 change-resource-record-sets `
            --hosted-zone-id $zoneId `
            --change-batch $changeBatch
        
        Write-Host "‚úÖ CNAME –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω" -ForegroundColor Green
    }
    
    # –°–æ–∑–¥–∞–Ω–∏–µ ALIAS –∑–∞–ø–∏—Å–∏
    Write-Host "`nüìù –°–æ–∑–¥–∞—é ALIAS –∑–∞–ø–∏—Å—å –¥–ª—è api.neuralchat.pro..." -ForegroundColor Cyan
    
    $changeBatch = @{
        Changes = @(
            @{
                Action = "UPSERT"
                ResourceRecordSet = @{
                    Name = "api.neuralchat.pro"
                    Type = "A"
                    AliasTarget = @{
                        HostedZoneId = $albZone
                        DNSName = $albDns
                        EvaluateTargetHealth = $true
                    }
                }
            }
        )
    } | ConvertTo-Json -Depth 10
    
    aws route53 change-resource-record-sets `
        --hosted-zone-id $zoneId `
        --change-batch $changeBatch
    
    Write-Host "‚úÖ ALIAS –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞!" -ForegroundColor Green
    
} elseif ($dnsChoice -eq "2") {
    Write-Host "`n‚úÖ –í—ã–±—Ä–∞–Ω Namecheap DNS" -ForegroundColor Green
    Write-Host "`n‚ö†Ô∏è  –î–ª—è Namecheap DNS —Ç—Ä–µ–±—É–µ—Ç—Å—è:" -ForegroundColor Yellow
    Write-Host "1. Network Load Balancer (NLB) –≤–º–µ—Å—Ç–æ ALB" -ForegroundColor White
    Write-Host "2. Elastic IP ($3.60/–º–µ—Å—è—Ü)" -ForegroundColor White
    Write-Host "3. –†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —á–µ—Ä–µ–∑ Let's Encrypt" -ForegroundColor White
    
    $continue = Read-Host "`n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n)"
    if ($continue -ne "y") {
        exit
    }
    
    # –°–æ–∑–¥–∞–Ω–∏–µ Elastic IP
    Write-Host "`nüìù –°–æ–∑–¥–∞—é Elastic IP..." -ForegroundColor Cyan
    $eipResult = aws ec2 allocate-address --domain vpc | ConvertFrom-Json
    $elasticIp = $eipResult.PublicIp
    $allocationId = $eipResult.AllocationId
    
    Write-Host "‚úÖ Elastic IP —Å–æ–∑–¥–∞–Ω: $elasticIp" -ForegroundColor Green
    
    Write-Host "`nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Namecheap:" -ForegroundColor Yellow
    Write-Host "1. –í–æ–π–¥–∏—Ç–µ –≤ Namecheap ‚Üí Domain List ‚Üí Manage" -ForegroundColor White
    Write-Host "2. Advanced DNS ‚Üí Add New Record" -ForegroundColor White
    Write-Host "3. Type: A Record" -ForegroundColor White
    Write-Host "4. Host: api" -ForegroundColor White
    Write-Host "5. Value: $elasticIp" -ForegroundColor White
    Write-Host "6. TTL: Automatic" -ForegroundColor White
    
    Write-Host "`n‚ö†Ô∏è  –î–∞–ª–µ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:" -ForegroundColor Yellow
    Write-Host "1. –°–æ–∑–¥–∞—Ç—å Network Load Balancer" -ForegroundColor White
    Write-Host "2. –ü—Ä–∏–≤—è–∑–∞—Ç—å Elastic IP –∫ NLB" -ForegroundColor White
    Write-Host "3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å SSL —á–µ—Ä–µ–∑ Let's Encrypt –Ω–∞ EC2" -ForegroundColor White
    
} else {
    Write-Host "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä" -ForegroundColor Red
    exit
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)..." -ForegroundColor Cyan
Write-Host "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:" -ForegroundColor Yellow
Write-Host "  nslookup api.neuralchat.pro" -ForegroundColor White
Write-Host "  Resolve-DnsName api.neuralchat.pro" -ForegroundColor White
Write-Host "  curl -I https://api.neuralchat.pro/health" -ForegroundColor White

Write-Host "`nüìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:" -ForegroundColor Yellow
Write-Host "Frontend: REACT_APP_API_URL=https://api.neuralchat.pro" -ForegroundColor White
Write-Host "Admin: NEXT_PUBLIC_API_URL=https://api.neuralchat.pro" -ForegroundColor White

Write-Host "`n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host "üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: API_SUBDOMAIN_SETUP.md" -ForegroundColor Cyan 