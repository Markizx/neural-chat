#!/usr/bin/env pwsh

Write-Host "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ TypeScript –æ—à–∏–±–æ–∫..." -ForegroundColor Yellow

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é web
Set-Location "packages/web"

# –ú–∞—Å—Å–æ–≤–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –≤ —Ñ–∞–π–ª–∞—Ö
$files = @(
    "src/components/Chat/ChatList.tsx",
    "src/components/Projects/ProjectList.tsx", 
    "src/components/Settings/ProfileSettings.tsx",
    "src/components/Settings/SettingsPanel.tsx",
    "src/components/Subscription/PricingPlans.tsx",
    "src/components/Subscription/SubscriptionStatus.tsx",
    "src/hooks/useChat.ts",
    "src/pages/BrainstormPage.tsx",
    "src/pages/HomePage.tsx",
    "src/services/chat.service.ts"
)

foreach ($file in $files) {
    if (Test-Path $file) {
        Write-Host "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º $file..." -ForegroundColor Cyan
        
        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        $content = Get-Content $file -Raw
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
        $content = $content -replace 'data\?\.([a-zA-Z]+)', '(data as any)?.$1'
        $content = $content -replace 'response\.data\?\.([a-zA-Z]+)', '(response.data as any)?.$1'
        $content = $content -replace 'response\.data\.([a-zA-Z]+)', '(response.data as any).$1'
        $content = $content -replace 'stats\?\.([a-zA-Z]+)', '(stats as any)?.$1'
        $content = $content -replace 'stats\.([a-zA-Z]+)', '(stats as any).$1'
        $content = $content -replace 'session\?\.([a-zA-Z]+)', '(session as any)?.$1'
        $content = $content -replace 'subscriptionData\?\.([a-zA-Z]+)', '(subscriptionData as any)?.$1'
        $content = $content -replace 'user\?\.([a-zA-Z]+)', '(user as any)?.$1'
        $content = $content -replace '\[response\.data\]', '[response.data as string]'
        $content = $content -replace 'new Blob\(\[response\.data\]', 'new Blob([response.data as string]'
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        Set-Content $file $content -NoNewline
        
        Write-Host "‚úÖ $file –∏—Å–ø—Ä–∞–≤–ª–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è –§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
    }
}

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã —Ç–∏–ø–æ–≤
Write-Host "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã —Ç–∏–ø–æ–≤..." -ForegroundColor Cyan

# –î–æ–±–∞–≤–ª—è–µ–º Chat —Ç–∏–ø –≤ api.types.ts –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
$apiTypesFile = "src/types/api.types.ts"
if (Test-Path $apiTypesFile) {
    $content = Get-Content $apiTypesFile -Raw
    if ($content -notmatch "export.*Chat") {
        $content = $content -replace "(// API Response wrapper types)", "// Export local types for use in components`nexport { Chat, Message, User, BrainstormSession, Project, Subscription };`n`n`$1"
        Set-Content $apiTypesFile $content -NoNewline
    }
}

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ChatPage.tsx
$chatPageFile = "src/pages/ChatPage.tsx"
if (Test-Path $chatPageFile) {
    $content = Get-Content $chatPageFile -Raw
    $content = $content -replace 'initialChat=\{chat\}', 'initialChat={chat as any}'
    Set-Content $chatPageFile $content -NoNewline
}

Write-Host "üéâ –í—Å–µ TypeScript –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!" -ForegroundColor Green
Write-Host "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π: npm start" -ForegroundColor Cyan

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
Set-Location "../.." 