# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
# –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã TypeScript –∏ react-scripts

Write-Host "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ NeuralChat" -ForegroundColor Cyan
Write-Host "=================================================" -ForegroundColor Cyan

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –≤–µ—Ä—Å–∏–∏
Write-Host "`nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js..." -ForegroundColor Yellow
$nodeVersion = node --version
Write-Host "Node.js –≤–µ—Ä—Å–∏—è: $nodeVersion" -ForegroundColor Green

if ($nodeVersion -lt "v18.0.0") {
    Write-Host "‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏—è 18.0.0 –∏–ª–∏ –≤—ã—à–µ" -ForegroundColor Yellow
    Write-Host "–°–∫–∞—á–∞–π—Ç–µ —Å https://nodejs.org/" -ForegroundColor White
}

# –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ npm
Write-Host "`nüßπ –û—á–∏—Å—Ç–∫–∞ npm –∫–µ—à–∞..." -ForegroundColor Cyan
npm cache clean --force

# –£–¥–∞–ª–µ–Ω–∏–µ node_modules –∏ package-lock.json
Write-Host "`nüóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Cyan
if (Test-Path "node_modules") {
    Remove-Item -Recurse -Force "node_modules"
    Write-Host "‚úÖ node_modules —É–¥–∞–ª–µ–Ω" -ForegroundColor Green
}

if (Test-Path "package-lock.json") {
    Remove-Item -Force "package-lock.json"
    Write-Host "‚úÖ package-lock.json —É–¥–∞–ª–µ–Ω" -ForegroundColor Green
}

# –£–¥–∞–ª–µ–Ω–∏–µ node_modules –≤ –ø–∞–∫–µ—Ç–∞—Ö
$packages = @("packages/api", "packages/web", "packages/admin", "packages/shared", "packages/ui-kit")
foreach ($package in $packages) {
    if (Test-Path "$package/node_modules") {
        Remove-Item -Recurse -Force "$package/node_modules"
        Write-Host "‚úÖ $package/node_modules —É–¥–∞–ª–µ–Ω" -ForegroundColor Green
    }
    if (Test-Path "$package/package-lock.json") {
        Remove-Item -Force "$package/package-lock.json"
        Write-Host "‚úÖ $package/package-lock.json —É–¥–∞–ª–µ–Ω" -ForegroundColor Green
    }
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å legacy-peer-deps
Write-Host "`nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å --legacy-peer-deps..." -ForegroundColor Cyan
npm install --legacy-peer-deps

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
} else {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π" -ForegroundColor Red
    Write-Host "`nüîÑ –ü—Ä–æ–±—É—é –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥..." -ForegroundColor Yellow
    
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å force
    npm install --force
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Å --force!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏" -ForegroundColor Red
        Write-Host "`nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä—É—á–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É:" -ForegroundColor Yellow
        Write-Host "1. npm install --legacy-peer-deps" -ForegroundColor White
        Write-Host "2. npm install --force" -ForegroundColor White
        Write-Host "3. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ yarn –≤–º–µ—Å—Ç–æ npm" -ForegroundColor White
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..." -ForegroundColor Cyan
if (Test-Path "node_modules") {
    Write-Host "‚úÖ node_modules —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green
} else {
    Write-Host "‚ùå node_modules –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript –≤–µ—Ä—Å–∏–∏
Write-Host "`nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ TypeScript..." -ForegroundColor Yellow
try {
    $tsVersion = npx tsc --version
    Write-Host "TypeScript –≤–µ—Ä—Å–∏—è: $tsVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  TypeScript –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ react-scripts
Write-Host "`nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ react-scripts..." -ForegroundColor Yellow
try {
    $reactScriptsVersion = npm list react-scripts --depth=0 2>$null
    if ($reactScriptsVersion -match "react-scripts@") {
        Write-Host "‚úÖ react-scripts —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ö†Ô∏è  react-scripts –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ—Ä–Ω–µ" -ForegroundColor Yellow
}

# –°–æ–∑–¥–∞–Ω–∏–µ .npmrc –¥–ª—è –±—É–¥—É—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫
Write-Host "`nüìù –°–æ–∑–¥–∞–Ω–∏–µ .npmrc..." -ForegroundColor Cyan
$npmrcContent = @"
legacy-peer-deps=true
fund=false
audit=false
"@

$npmrcContent | Out-File -FilePath ".npmrc" -Encoding UTF8
Write-Host "‚úÖ .npmrc —Å–æ–∑–¥–∞–Ω —Å legacy-peer-deps=true" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ env —Ñ–∞–π–ª–æ–≤
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–æ–≤..." -ForegroundColor Cyan
$envFiles = @(
    "packages/api/.env",
    "packages/web/.env", 
    "packages/admin/.env"
)

foreach ($envFile in $envFiles) {
    if (Test-Path $envFile) {
        Write-Host "‚úÖ $envFile —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Green
    } else {
        $exampleFile = $envFile -replace "\.env$", ".env.example"
        if (Test-Path $exampleFile) {
            Copy-Item $exampleFile $envFile
            Write-Host "‚úÖ $envFile —Å–æ–∑–¥–∞–Ω –∏–∑ –ø—Ä–∏–º–µ—Ä–∞" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è  $envFile –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
        }
    }
}

Write-Host "`nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Green
Write-Host "`nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Yellow
Write-Host "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª—ã —Å –≤–∞—à–∏–º–∏ API –∫–ª—é—á–∞–º–∏" -ForegroundColor White
Write-Host "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run dev" -ForegroundColor White
Write-Host "3. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: npm run dev --legacy-peer-deps" -ForegroundColor White

Write-Host "`nüìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:" -ForegroundColor Cyan
Write-Host "- ENV_SETUP.md - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è" -ForegroundColor White
Write-Host "- QUICK_START.md - –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç" -ForegroundColor White
Write-Host "- LAUNCH_GUIDE.md - –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ" -ForegroundColor White 