# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —á–∏—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ NeuralChat
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\scripts\install-clean.ps1

param(
    [string]$TargetPath = "C:\Users\PC\Downloads\neuralchat-clean"
)

Write-Host "üöÄ –ß–∏—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ NeuralChat" -ForegroundColor Cyan
Write-Host "==============================" -ForegroundColor Cyan

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –≤–µ—Ä—Å–∏–∏
Write-Host "`nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js..." -ForegroundColor Yellow
try {
    $nodeVersion = node --version
    Write-Host "Node.js –≤–µ—Ä—Å–∏—è: $nodeVersion" -ForegroundColor Green
    
    if ($nodeVersion -lt "v18.0.0") {
        Write-Host "‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏—è 18.0.0 –∏–ª–∏ –≤—ã—à–µ" -ForegroundColor Yellow
        Write-Host "–°–∫–∞—á–∞–π—Ç–µ —Å https://nodejs.org/" -ForegroundColor White
    }
} catch {
    Write-Host "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js —Å https://nodejs.org/" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ npm –≤–µ—Ä—Å–∏–∏
try {
    $npmVersion = npm --version
    Write-Host "npm –≤–µ—Ä—Å–∏—è: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    exit 1
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
Write-Host "`nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..." -ForegroundColor Cyan
if (Test-Path $TargetPath) {
    $overwrite = Read-Host "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $TargetPath —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/n)"
    if ($overwrite -eq "y") {
        Remove-Item -Recurse -Force $TargetPath
        Write-Host "‚úÖ –°—Ç–∞—Ä–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞" -ForegroundColor Red
        exit 1
    }
}

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
Write-Host "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Cyan
$currentPath = Get-Location
Copy-Item -Recurse $currentPath $TargetPath
Write-Host "‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ $TargetPath" -ForegroundColor Green

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –Ω–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
Set-Location $TargetPath
Write-Host "üìÇ –ü–µ—Ä–µ—à–ª–∏ –≤ $TargetPath" -ForegroundColor Green

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
Write-Host "`nüßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤..." -ForegroundColor Yellow

# –£–¥–∞–ª–µ–Ω–∏–µ node_modules
$nodeModulesPaths = @(
    "node_modules",
    "packages/api/node_modules",
    "packages/web/node_modules", 
    "packages/admin/node_modules",
    "packages/shared/node_modules",
    "packages/ui-kit/node_modules"
)

foreach ($path in $nodeModulesPaths) {
    if (Test-Path $path) {
        Remove-Item -Recurse -Force $path
        Write-Host "‚úÖ $path —É–¥–∞–ª–µ–Ω" -ForegroundColor Green
    }
}

# –£–¥–∞–ª–µ–Ω–∏–µ lock —Ñ–∞–π–ª–æ–≤
$lockFiles = @(
    "package-lock.json",
    "packages/api/package-lock.json",
    "packages/web/package-lock.json",
    "packages/admin/package-lock.json",
    "packages/shared/package-lock.json",
    "packages/ui-kit/package-lock.json"
)

foreach ($file in $lockFiles) {
    if (Test-Path $file) {
        Remove-Item -Force $file
        Write-Host "‚úÖ $file —É–¥–∞–ª–µ–Ω" -ForegroundColor Green
    }
}

# –û—á–∏—Å—Ç–∫–∞ npm –∫–µ—à–∞
Write-Host "`nüßπ –û—á–∏—Å—Ç–∫–∞ npm –∫–µ—à–∞..." -ForegroundColor Cyan
npm cache clean --force

# –°–æ–∑–¥–∞–Ω–∏–µ .npmrc –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (-not (Test-Path ".npmrc")) {
    Write-Host "`nüìù –°–æ–∑–¥–∞–Ω–∏–µ .npmrc..." -ForegroundColor Cyan
    $npmrcContent = @"
legacy-peer-deps=true
fund=false
audit=false
save-exact=false
package-lock=true
"@
    $npmrcContent | Out-File -FilePath ".npmrc" -Encoding UTF8
    Write-Host "‚úÖ .npmrc —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
Write-Host "`nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Cyan
Write-Host "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..." -ForegroundColor Yellow

# –ü–æ–ø—ã—Ç–∫–∞ 1: legacy-peer-deps
Write-Host "`nüîÑ –ü–æ–ø—ã—Ç–∫–∞ 1: npm install --legacy-peer-deps" -ForegroundColor Yellow
npm install --legacy-peer-deps

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ —Å --legacy-peer-deps!" -ForegroundColor Green
    $installSuccess = $true
} else {
    Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å --legacy-peer-deps, –ø—Ä–æ–±—É—é --force..." -ForegroundColor Yellow
    
    # –ü–æ–ø—ã—Ç–∫–∞ 2: force
    Write-Host "`nüîÑ –ü–æ–ø—ã—Ç–∫–∞ 2: npm install --force" -ForegroundColor Yellow
    npm install --force
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å --force!" -ForegroundColor Green
        $installSuccess = $true
    } else {
        Write-Host "‚ö†Ô∏è npm install –Ω–µ —É–¥–∞–ª—Å—è, –ø—Ä–æ–±—É—é yarn..." -ForegroundColor Yellow
        
        # –ü–æ–ø—ã—Ç–∫–∞ 3: yarn
        try {
            yarn --version | Out-Null
            Write-Host "`nüîÑ –ü–æ–ø—ã—Ç–∫–∞ 3: yarn install" -ForegroundColor Yellow
            yarn install
            
            if ($LASTEXITCODE -eq 0) {
                Write-Host "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å yarn!" -ForegroundColor Green
                $installSuccess = $true
            } else {
                $installSuccess = $false
            }
        } catch {
            Write-Host "‚ùå yarn –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
            $installSuccess = $false
        }
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
if ($installSuccess) {
    Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..." -ForegroundColor Cyan
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ node_modules
    if (Test-Path "node_modules") {
        Write-Host "‚úÖ node_modules —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ùå node_modules –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript
    try {
        $tsVersion = npx tsc --version
        Write-Host "‚úÖ TypeScript: $tsVersion" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è TypeScript –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
    }
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤
    Write-Host "`nüìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–æ–≤..." -ForegroundColor Cyan
    $envMappings = @{
        "packages/api/env.example" = "packages/api/.env"
        "packages/web/env.example" = "packages/web/.env"
        "packages/admin/env.example" = "packages/admin/.env"
    }
    
    foreach ($mapping in $envMappings.GetEnumerator()) {
        if (Test-Path $mapping.Key) {
            if (-not (Test-Path $mapping.Value)) {
                Copy-Item $mapping.Key $mapping.Value
                Write-Host "‚úÖ $($mapping.Value) —Å–æ–∑–¥–∞–Ω –∏–∑ –ø—Ä–∏–º–µ—Ä–∞" -ForegroundColor Green
            } else {
                Write-Host "‚ÑπÔ∏è $($mapping.Value) —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Blue
            }
        }
    }
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    Write-Host "`nüéâ –ß–∏—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    Write-Host "`nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Yellow
    Write-Host "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª—ã —Å –≤–∞—à–∏–º–∏ API –∫–ª—é—á–∞–º–∏:" -ForegroundColor White
    Write-Host "   - packages/api/.env (MongoDB, Claude, Grok –∫–ª—é—á–∏)" -ForegroundColor White
    Write-Host "   - packages/web/.env (API URL)" -ForegroundColor White
    Write-Host "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: npm run dev" -ForegroundColor White
    Write-Host "3. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost:3000" -ForegroundColor White
    
    Write-Host "`nüìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:" -ForegroundColor Cyan
    Write-Host "- ENV_SETUP.md - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è" -ForegroundColor White
    Write-Host "- QUICK_START.md - –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç" -ForegroundColor White
    Write-Host "- LAUNCH_GUIDE.md - –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ" -ForegroundColor White
    
    Write-Host "`nüìÇ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $TargetPath" -ForegroundColor Cyan
    
} else {
    Write-Host "`n‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!" -ForegroundColor Red
    Write-Host "`nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä—É—á–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É:" -ForegroundColor Yellow
    Write-Host "1. cd `"$TargetPath`"" -ForegroundColor White
    Write-Host "2. npm install --legacy-peer-deps" -ForegroundColor White
    Write-Host "3. –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: npm install --force" -ForegroundColor White
    Write-Host "4. –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ yarn: npm install -g yarn && yarn install" -ForegroundColor White
}

# –í–æ–∑–≤—Ä–∞—Ç –≤ –∏—Å—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
Set-Location $currentPath 